{"version":3,"sources":["../src/webpack.ts","../src/index.ts"],"sourcesContent":["export { webpackPlugin as lottieMinify } from \"./\";\n","import { createUnplugin } from \"unplugin\";\nimport { readFileSync, writeFileSync } from \"fs\";\nimport { join, sep } from \"path\";\nimport { lottieMinify } from \"lottie-minify\";\nimport type { ILottieJSON } from \"lottie-minify\";\ntype Option = {\n  stringify: (data: ILottieJSON) => string;\n  numberFixLength: number;\n  dropKeyList: string[];\n};\n\nconst getCode = (url: string, option: Option): string => {\n  const path = url.split(\"?\")[0];\n  const text = readFileSync(path, \"utf-8\");\n  const json = lottieMinify(JSON.parse(text), {\n    copy: false,\n    numberFixLength: option.numberFixLength,\n  });\n  const assets = json.assets;\n  const assetsMap: Record<string, string> = {};\n\n  for (const item of assets) {\n    const { id, p = \"\", u = \"\" } = item;\n    if (p.startsWith(\"data:image\")) continue;\n    if (u || p) {\n      const imgPath = \".\" + sep + join(u, p);\n      assetsMap[id] = imgPath;\n    }\n  }\n  const importBlock = assets\n    .filter((i) => assetsMap[i.id])\n    .map((i) => `import _${i.id} from \"${assetsMap[i.id]}\"`)\n    .join(\"\\n\");\n\n  const pathBlock = assets\n    .filter((i) => assetsMap[i.id])\n    .map(\n      (i, k) => `data.assets[${k}] = {...data.assets[${k}], u:'', p: _${i.id} }`\n    )\n    .join(\"\\n\");\n\n  const dataStr = `${JSON.stringify(json)}`;\n  const code = `\n    ${importBlock}\n    const data = ${dataStr};\n    ${pathBlock}\n    export default data;\n  `;\n\n  writeFileSync(\"c.txt\", code);\n  return code;\n};\nconst defaultOption: Option = {\n  stringify: JSON.stringify,\n  numberFixLength: 3,\n  dropKeyList: [\"nm\", \"tyName\", \"n\", \"mn\", \"cl\", \"ln\"],\n};\nconst NAME = \"lottie-minify-plugin\";\nexport const unplugin = createUnplugin((option: Partial<Option> = {}) => {\n  const opt = { ...defaultOption, ...option };\n  return {\n    name: NAME,\n    // just like rollup transform\n    transform(code, id) {\n      if (!id.includes(\".json?lottie\")) {\n        return code;\n      }\n      writeFileSync(\"code.txt\", code);\n      return getCode(id, opt);\n    },\n  };\n});\n\nexport const vitePlugin = unplugin.vite;\nexport const rollupPlugin = unplugin.rollup;\nexport const webpackPlugin = unplugin.webpack;\nexport const esbuildPlugin = unplugin.esbuild;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACAA,sBAA+B;AAC/B,gBAA4C;AAC5C,kBAA0B;AAC1B,2BAA6B;AAQ7B,IAAM,UAAU,CAAC,KAAa,WAA2B;AACvD,QAAM,OAAO,IAAI,MAAM,KAAK;AAC5B,QAAM,OAAO,4BAAa,MAAM;AAChC,QAAM,OAAO,uCAAa,KAAK,MAAM,OAAO;AAAA,IAC1C,MAAM;AAAA,IACN,iBAAiB,OAAO;AAAA;AAE1B,QAAM,SAAS,KAAK;AACpB,QAAM,YAAoC;AAE1C,aAAW,QAAQ,QAAQ;AACzB,UAAM,EAAE,IAAI,IAAI,IAAI,IAAI,OAAO;AAC/B,QAAI,EAAE,WAAW;AAAe;AAChC,QAAI,KAAK,GAAG;AACV,YAAM,UAAU,MAAM,kBAAM,sBAAK,GAAG;AACpC,gBAAU,MAAM;AAAA;AAAA;AAGpB,QAAM,cAAc,OACjB,OAAO,CAAC,MAAM,UAAU,EAAE,KAC1B,IAAI,CAAC,MAAM,WAAW,EAAE,YAAY,UAAU,EAAE,QAChD,KAAK;AAER,QAAM,YAAY,OACf,OAAO,CAAC,MAAM,UAAU,EAAE,KAC1B,IACC,CAAC,GAAG,MAAM,eAAe,wBAAwB,iBAAiB,EAAE,QAErE,KAAK;AAER,QAAM,UAAU,GAAG,KAAK,UAAU;AAClC,QAAM,OAAO;AAAA,MACT;AAAA,mBACa;AAAA,MACb;AAAA;AAAA;AAIJ,+BAAc,SAAS;AACvB,SAAO;AAAA;AAET,IAAM,gBAAwB;AAAA,EAC5B,WAAW,KAAK;AAAA,EAChB,iBAAiB;AAAA,EACjB,aAAa,CAAC,MAAM,UAAU,KAAK,MAAM,MAAM;AAAA;AAEjD,IAAM,OAAO;AACN,IAAM,WAAW,oCAAe,CAAC,SAA0B,OAAO;AACvE,QAAM,MAAM,kCAAK,gBAAkB;AACnC,SAAO;AAAA,IACL,MAAM;AAAA,IAEN,UAAU,MAAM,IAAI;AAClB,UAAI,CAAC,GAAG,SAAS,iBAAiB;AAChC,eAAO;AAAA;AAET,mCAAc,YAAY;AAC1B,aAAO,QAAQ,IAAI;AAAA;AAAA;AAAA;AAKlB,IAAM,aAAa,SAAS;AAC5B,IAAM,eAAe,SAAS;AAC9B,IAAM,gBAAgB,SAAS;AAC/B,IAAM,gBAAgB,SAAS;","names":[]}